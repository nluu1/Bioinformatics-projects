SD = sapply(cont_data,sd))
View(sum_table)
?View()
View(sum_table,'a')
View(sum_table,'Summary Statistics')
?sapply()
sum_table %>% mutate_all(round,3)
sum_table <- data.frame(
Mean = sapply(cont_data,mean),
Median = sapply(cont_data,median),
Variance = sapply(cont_data,var),
SD = sapply(cont_data,sd),
%>% mutate_all(round,3))
sum_table <- data.frame(
Mean = sapply(cont_data,mean),
Median = sapply(cont_data,median),
Variance = sapply(cont_data,var),
SD = sapply(cont_data,sd)) %>% mutate_all(round,3)
View(sum_table,'Summary Statistics')
sum_table <- data.frame(
Mean = sapply(cont_data,mean),
Median = sapply(cont_data,median),
Variance = sapply(cont_data,var),
SD = sapply(cont_data,sd))
ble,'Summary Statistics')
View(sum_table,'Summary Statistics')
sum_table %>% mutate_all(round,3)
sum_table %>% mutate_all(round,2)
View(sum_table,'Summary Statistics')
sum_table <- sum_table %>% mutate_all(round,2)
View(sum_table,'Summary Statistics')
sum_table <- sum_table %>% mutate_all(round,3)
View(sum_table,'Summary Statistics')
sum_table <- data.frame(
Mean = sapply(cont_data,mean),
Median = sapply(cont_data,median),
Variance = sapply(cont_data,var),
SD = sapply(cont_data,sd))
sum_table <- sum_table %>% mutate_all(round,3)
View(sum_table,'Summary Statistics')
cont.histogram <- function(data,x,y,x.axis,title){
ggplot(data,aes(x,y))+
geom_histogram(color = "black", fill = "green", bins = 12)+
labs(x=x.axis, title=title)
}
ggplot(data,aes(x,y))+
geom_histogram(color = "black", fill = "green", bins = 12)+
labs(x=x.axis, title=title)
cont.plot <- function(data,x,y,x.axis,title){
ggplot(data,aes(x,y))+
geom_histogram(color = "black", fill = "green", bins = 12)+
labs(x=x.axis, title=title)
}
rm cont.histogram()
cont.plot(cardio_data,x=age,x.axis="Age",title="Age Distribution")
cont.plot <- function(data,x,x.axis,title){
ggplot(data,aes({x}))+
geom_histogram(color = "black", fill = "green", bins = 12)+
labs(x=x.axis, title=title)
}
cont.plot(cardio_data,x=age,x.axis="Age",title="Age Distribution")
library(rlang)
ggplot(data,aes({{x}}))+
geom_histogram(color = "black", fill = "green", bins = 12)+
labs(x={{x.axis}}, title={{title}})
cont.plot <- function(data,x,x.axis,title){
ggplot(data,aes({{x}}))+
geom_histogram(color = "black", fill = "green", bins = 12)+
labs(x={{x.axis}}, title={{title}})
}
rlang::last_error()
cont.plot <- function(data,x,x.axis,title){
ggplot({{data}},aes({{x}}))+
geom_histogram(color = "black", fill = "green", bins = 12)+
labs(x={{x.axis}}, title={{title}})
}
cont.plot(cardio_data,x=age,x.axis="Age",title="Age Distribution")
myfunction_1 = function (data, Variable1) {
ggplot(data=data, aes_string(sprintf("factor(%s)",Variable1), "Variable2"))+
geom_boxplot(fill="grey", colour="black")+
labs(title = sprintf("%s and Variable2", Variable1)) +
labs (x = Variable1, y = "Variable2")
}
p1 <- myfunction_1(cardio_data,"Age")
p1
p1 <- myfunction_1(cardio_data,"age")
p1
myfunction_1 = function (data, Variable1) {
ggplot(data=data, aes_string(Variable1))+
geom_boxplot(fill="grey", colour="black")+
labs(title = sprintf( Variable1)) +
labs (x = Variable1)
}
p1 <- myfunction_1(cardio_data,"age")
p1 <- myfunction_1(cardio_data,"Age")
p1
p1 <- myfunction_1(cardio_data,age)
p1
p1 <- myfunction_1(cardio_data,Variable1=age)
myfunction_1 = function (data, Variable1) {
ggplot(data=data, aes_string("factor(%s)",Variable1))+
geom_boxplot(fill="grey", colour="black")+
labs(title = sprintf("%s",Variable1)) +
labs (x = Variable1)
}
p1 <- myfunction_1(cardio_data,Variable1=age)
p1 <- myfunction_1(cardio_data,"Age")
cont.plot <- function(data,X,xlabel,title){
ggplot(data=data,aes_string(x={{X}}))+
geom_histogram(color = "black", fill = "green", bins = 12)+
labs(x={{xlabel}}, title={{title}})
}
cont.plot(cardio_data,x=age,xlabel="Age",title="Age Distribution")
cont.plot(cardio_data,X=age,xlabel="Age",title="Age Distribution")
cont.plot <- function(data,X,xlabel,title){
ggplot(data=data,aes(x={{X}}))+
geom_histogram(color = "black", fill = "green", bins = 12)+
labs(x={{xlabel}}, title={{title}})
}
cont.plot(cardio_data,X=age,xlabel="Age",title="Age Distribution")
rlang::last_error()
cont.plot <- function(data,X,xlabel,title){
ggplot(data=data,aes(x={{X}}))+
geom_histogram(color = "black", fill = "green", bins = 12)+
labs(x=xlabel, title=title)
}
cont.plot(cardio_data,X=age,xlabel="Age",title="Age Distribution")
#Age
ggplot(cardio_data, aes(x=age))+
geom_histogram(color = "black", fill = "green", bins = 12)+
labs(x="Age", title = "Age Distribution")
cont.plot(cardio_data,X=age,xlabel="Age",title="Age Distribution")
#Age
age.plot <- cont.plot(cardio_data,X=age,xlabel="Age",title="Age Distribution")
ggplot(cardio_data, aes(x=BP))+
geom_histogram(color = "black", fill = "green", bins = 12)+
labs(x="Blood Pressure (mmHg)", title = "Blood Pressure")
BP.plot <- cont.plot(cardio_data,X=BP,xlabel="Blood Pressure (mmHg)",title="Blood Pressure")
#Cholesterol
chol.plot <- cont.plot(cardio_data,X=cholesterol,xlabel="Cholesterol level (mg/dL)",title="Cholesterol")
#Max HR
HR.plot <- cont.plot(cardio_data,X=maxHR,xlabel="Maximum Heart Rate (bpm)",title="Maximum Heart Rate")
#Peak
peak.plot <- cont.plot(cardio_data,X=peak,xlabel="Peak",title="Peak")
#Peak
peak.plot <- cont.plot(cardio_data,X=peak,xlabel="Peak",title="Peak")
#Max HR
HR.plot <- cont.plot(cardio_data,X=maxHR,xlabel="Maximum Heart Rate (bpm)",title="Maximum Heart Rate")
grid.arrange(age.plot,BP.plot, ncol=2)
library(gridExtra) #for grid
grid.arrange(age.plot,BP.plot, ncol=2)
grid.arrange(age.plot,BP.plot,chol.plot,HR.plot,peak.plot, ncol=4)
grid.arrange(age.plot,BP.plot,chol.plot,HR.plot,peak.plot, ncol=3)
cont.histogram <- grid.arrange(age.plot,BP.plot,chol.plot,HR.plot,peak.plot, ncol=3)
toString(X)
X <- age
cat.plot <- function(data,X,xlabel,ylabel,title){
ggplot(data=data, aes(x={{X}}, fill={{X}})) +
geom_bar() +
labs(x=xlabel, y=ylabel,
title = title) +
scale_fill_discrete(name = toString({{X}}) )
}
cat.plot(data=cardio_data,X=class,
xlabel="Disease",ylabel="Number of patients",
title="Healthy or Sick Individuals")
cat.plot(data=cardio_data,X=class,xlabel="Disease",ylabel="Number of patients",title="Healthy or Sick Individuals")
ggplot(data=data, aes(x={{X}}, fill={{X}})) +
geom_bar() +
labs(x=xlabel, y=ylabel,
title = title) +
scale_fill_discrete(name = X) )
cat.plot <- function(data,X,xlabel,ylabel,title){
ggplot(data=data, aes(x={{X}}, fill={{X}})) +
geom_bar() +
labs(x=xlabel, y=ylabel,
title = title) +
scale_fill_discrete(name = X)
}
cat.plot(data=cardio_data,X=class,xlabel="Disease",ylabel="Number of patients",title="Healthy or Sick Individuals")
cat.plot <- function(data,X,xlabel,ylabel,title){
ggplot(data=data, aes(x={{X}}, fill=X)) +
geom_bar() +
labs(x=xlabel, y=ylabel,
title = title) +
scale_fill_discrete(name = X)
}
cat.plot(data=cardio_data,X=class,xlabel="Disease",ylabel="Number of patients",title="Healthy or Sick Individuals")
cat.plot <- function(data,X,xlabel,ylabel,title){
ggplot(data=data, aes(x={{X}}, fill={{X}})) +
geom_bar() +
labs(x=xlabel, y=ylabel,
title = title) +
scale_fill_discrete(name = X)
}
cat.plot(data=cardio_data,X=class,xlabel="Disease",ylabel="Number of patients",title="Healthy or Sick Individuals")
cat.plot <- function(data,X,xlabel,ylabel,title){
ggplot(data=data, aes(x={{X}}, fill={{X}})) +
geom_bar() +
labs(x=xlabel, y=ylabel,
title = title) +
#scale_fill_discrete(name = X)
}
cat.plot(data=cardio_data,X=class,xlabel="Disease",ylabel="Number of patients",title="Healthy or Sick Individuals")
cat.plot <- function(data,X,xlabel,ylabel,title){
ggplot(data=data, aes(x={{X}}, fill={{X}})) +
geom_bar() +
labs(x=xlabel, y=ylabel,
title = title) +
scale_fill_discrete(name = X)
}
cat.plot(data=cardio_data,X=class,xlabel="Disease",ylabel="Number of patients",title="Healthy or Sick Individuals",name="Class")
cat.plot <- function(data,X,xlabel,ylabel,title,name){
ggplot(data=data, aes(x={{X}}, fill={{X}})) +
geom_bar() +
labs(x=xlabel, y=ylabel,
title = title) +
scale_fill_discrete(name = name)
}
cat.plot(data=cardio_data,X=class,xlabel="Disease",ylabel="Number of patients",title="Healthy or Sick Individuals",name="Class")
#Class (healthy and sick)
class <- cat.plot(data=cardio_data,X=class,xlabel="Disease",ylabel="Number of patients",title="Healthy or Sick Individuals",name="Class")
class <- cat.plot(data=cardio_data,X=class,
xlabel="Disease",ylabel="Number of patients",
title="Healthy or Sick Individuals",name="Class")
class
cat.plot <- function(data,X,xlabel,title,name){
ggplot(data=data, aes(x={{X}}, fill={{X}})) +
geom_bar() +
labs(x=xlabel, y="Number of patients",
title = title) +
scale_fill_discrete(name = name)
}
cat.plot <- function(data,X,xlabel,title,legendname){
ggplot(data=data, aes(x={{X}}, fill={{X}})) +
geom_bar() +
labs(x=xlabel, y="Number of patients",
title = title) +
scale_fill_discrete(name = legendname)
}
class <- cat.plot(data=cardio_data,X=class,
xlabel="Disease",
title="Healthy or Sick Individuals",
legendname="Class")
class
ggplot(cardio_data, aes(sex, fill=sex)) +
geom_bar() +
labs(x="Sex", y="Number of patients",
title = "Gender (Male or Female)") +
scale_fill_discrete(name = "Gender")
cat.plot <- function(data,X,xlabel,title){
ggplot(data=data, aes(x={{X}}, fill={{X}})) +
geom_bar() +
labs(x=xlabel, y="Number of patients",
title = title) +
scale_fill_discrete(name = xlabel)
}
#Class (healthy and sick)
class <- cat.plot(data=cardio_data,X=class,
xlabel="Disease conditition",
title="Healthy or Sick Individuals")
class
#Sex
sex <- cat.plot(data=cardio_data,X=sex,
xlabel="Gender",ylabel="Number of patients",
title="Healthy or Sick Individuals")
#Sex
sex <- cat.plot(data=cardio_data,X=sex,
xlabel="Gender",
title="Healthy or Sick Individuals")
sex
title=Gender (Male or Female)")
#Sex
sex <- cat.plot(data=cardio_data,X=sex,
xlabel="Gender",
title="Gender (Male or Female)")
sex
cp <- cat.plot(data=cardio_data,X=chest_paint_type,
xlabel="Chest Pain Type",
title="Chest Pain Type")
cp
cp <- cat.plot(data=cardio_data,X=chest_pain_type,
xlabel="Chest Pain Type",
title="Chest Pain Type")
cp
pgfast <- cat.plot(data=cardio_data,X=PG_fasting,
xlabel="PG Fasting",
title="Plasma Glucose Fasting")
pgfast
levels(cardio_data$sex) <- c("Female", "Male")
levels(cardio_data$chest_pain_type) <- c("Asymptomatic", "Abnormal Angina", "Angina", "NoTang")
levels(cardio_data$PG_fasting) <- c("No", "Yes")
levels(cardio_data$ECG_rest) <- c("Adnormal", "Hyp", "Normal")
levels(cardio_data$angina) <- c("No", "Yes")
levels(cardio_data$slope) <- c("Down", "Flat", "Up")
levels(cardio_data$thal) <- c("Fix", "Normal", "Rev")
levels(cardio_data$class) <- c("Healthy", "Sick")
pgfast <- cat.plot(data=cardio_data,X=PG_fasting,
xlabel="PG Fasting",
title="Plasma Glucose Fasting")
pgfast
library(dplyr)
library(ggplot2)
library(rlang) #for function()
library(gridExtra) #for grid
cardio_data_raw <- read.csv("https://raw.githubusercontent.com/PhyloGrok/AnalyzeBloodwork/master/data/Cardio.csv",stringsAsFactors = T)
#Refer to another name to preserve the original data-set:
cardio_data <- cardio_data_raw
#Define levels for categorical values
levels(cardio_data$sex) <- c("Female", "Male")
levels(cardio_data$chest_pain_type) <- c("Asymptomatic", "Abnormal Angina", "Angina", "NoTang")
levels(cardio_data$PG_fasting) <- c("No", "Yes")
levels(cardio_data$ECG_rest) <- c("Adnormal", "Hyp", "Normal")
levels(cardio_data$angina) <- c("No", "Yes")
levels(cardio_data$slope) <- c("Down", "Flat", "Up")
levels(cardio_data$thal) <- c("Fix", "Normal", "Rev")
levels(cardio_data$class) <- c("Healthy", "Sick")
#--- Exploring dataset:
View(cardio_data)
levels(cardio_data$PG_fasting) <- c("No", "Yes")
str(cardio_data)
#Transform some variable to R factors (that wasn't transformed from read.csv)
cardio_data$PG_fasting <- as.factor(cardio_data$PG_fasting)
cardio_data$PG_fasting <- as.factor(cardio_data$PG_fasting)
cardio_data$angina <- as.factor(cardio_data$angina)
levels(cardio_data$sex) <- c("Female", "Male")
levels(cardio_data$chest_pain_type) <- c("Asymptomatic", "Abnormal Angina", "Angina", "NoTang")
levels(cardio_data$PG_fasting) <- c("No", "Yes")
levels(cardio_data$ECG_rest) <- c("Adnormal", "Hyp", "Normal")
levels(cardio_data$angina) <- c("No", "Yes")
levels(cardio_data$slope) <- c("Down", "Flat", "Up")
levels(cardio_data$thal) <- c("Fix", "Normal", "Rev")
levels(cardio_data$class) <- c("Healthy", "Sick")
#--- Exploring dataset:
View(cardio_data)
pgfast <- cat.plot(data=cardio_data,X=PG_fasting,
xlabel="PG Fasting",
title="Plasma Glucose Fasting")
cont_data <- select(cardio_data, age, BP, cholesterol,maxHR,peak)
##Summary table: Mean, Median, SD
cont_data <- lapply(cont_data,as.numeric)
sum_table <- data.frame(
Mean = sapply(cont_data,mean),
Median = sapply(cont_data,median),
Variance = sapply(cont_data,var),
SD = sapply(cont_data,sd))
sum_table <- sum_table %>% mutate_all(round,3)
View(sum_table,'Summary Statistics')
cont.plot <- function(data,X,xlabel,title){
ggplot(data=data,aes(x={{X}}))+
geom_histogram(color = "black", fill = "green", bins = 12)+
labs(x=xlabel, title=title)
}
#Age
age.plot <- cont.plot(cardio_data,X=age,xlabel="Age",title="Age Distribution")
#BP
BP.plot <- cont.plot(cardio_data,X=BP,xlabel="Blood Pressure (mmHg)",title="Blood Pressure")
#Cholesterol
chol.plot <- cont.plot(cardio_data,X=cholesterol,xlabel="Cholesterol level (mg/dL)",title="Cholesterol")
#Max HR
HR.plot <- cont.plot(cardio_data,X=maxHR,xlabel="Maximum Heart Rate (bpm)",title="Maximum Heart Rate")
#Peak
peak.plot <- cont.plot(cardio_data,X=peak,xlabel="Peak",title="Peak")
### Spreadsheet of histograms for continuous data
cont.histogram <- grid.arrange(age.plot,BP.plot,chol.plot,HR.plot,peak.plot, ncol=3)
#Function for continuous data
cat.plot <- function(data,X,xlabel,title){
ggplot(data=data, aes(x={{X}}, fill={{X}})) +
geom_bar() +
labs(x=xlabel, y="Number of patients",
title = title) +
scale_fill_discrete(name = xlabel)
}
pgfast <- cat.plot(data=cardio_data,X=PG_fasting,
xlabel="PG Fasting",
title="Plasma Glucose Fasting")
pgfast
setwd("~/Bioinformatics-projects/in-R/Cardio Statistical Analysis")
ecg <- cat.plot(data=cardio_data,X=ECG_rest,
xlabel="ECG rest",
title="Electrocardiogram on rest")
ecg
ggplot(cardio_data, aes(ECG_rest, fill=ECG_rest)) +
geom_bar() +
labs(x="ECG rest", y="Number of patients",
title = "Electrocardiogram on rest") +
scale_fill_discrete(name = "ECG rest")
thal <- cat.plot(data=cardio_data,X=thal,
xlabel="Thalach",
title="Maximum heart rate achieved (thalach)")
#Thal
ggplot(cardio_data, aes(thal, fill=thal)) +
geom_bar() +
labs(x="Thalach", y="Number of patients",
title = "Maximum heart rate achieved (thalach)") +
scale_fill_discrete(name = "Thalach")
thal <- cat.plot(data=cardio_data,X=thal,
xlabel="Thalach",
title="Maximum heart rate achieved (thalach)")
thal
thal <- cat.plot(data=cardio_data,X=angina,
xlabel="Angina",
title="Angina chest pain")
thal
#Angina
ggplot(cardio_data, aes(angina, fill=angina)) +
geom_bar() +
labs(x="Angina", y="Number of patients",
title = "Angina chest pain") +
scale_fill_discrete(name = "Angina")
thal <- cat.plot(data=cardio_data,X=slope,
xlabel="Slope",
title="Slope of ST Segment")
thal
#slope
ggplot(cardio_data, aes(slope, fill=slope)) +
geom_bar() +
labs(x="Slope", y="Number of patients",
title = "Slope of ST Segment") +
scale_fill_discrete(name = "Slope")
angina <- cat.plot(data=cardio_data,X=angina,
xlabel="Angina",
title="Angina chest pain")
cat.barplot <-grid.arrange(class, sex, cp, pgfast, ecg, thal, angina,thal, ncol=4)
#Sex
sex <- cat.plot(data=cardio_data,X=sex,
xlabel="Gender",
title="Gender (Male or Female)")
### Spreadsheet of histograms for categorical data
cat.barplot <-grid.arrange(class, sex, cp, pgfast, ecg, thal, angina,thal, ncol=4)
class <- cat.plot(data=cardio_data,X=class,
xlabel="Disease conditition",
title="Healthy or Sick Individuals")
#Sex
sex <- cat.plot(data=cardio_data,X=sex,
xlabel="Gender",
title="Gender (Male or Female)")
#chest_pain_type:
cp <- cat.plot(data=cardio_data,X=chest_pain_type,
xlabel="Chest Pain Type",
title="Chest Pain Type")
#PG_fasting
pgfast <- cat.plot(data=cardio_data,X=PG_fasting,
xlabel="PG Fasting",
title="Plasma Glucose Fasting")
#ECG_rest
ecg <- cat.plot(data=cardio_data,X=ECG_rest,
xlabel="ECG rest",
title="Electrocardiogram on rest")
#Thal
thal <- cat.plot(data=cardio_data,X=thal,
xlabel="Thalach",
title="Maximum heart rate achieved (thalach)")
#Angina
angina <- cat.plot(data=cardio_data,X=angina,
xlabel="Angina",
title="Angina chest pain")
#slope
thal <- cat.plot(data=cardio_data,X=slope,
xlabel="Slope",
title="Slope of ST Segment")
### Spreadsheet of histograms for categorical data
cat.barplot <-grid.arrange(class, sex, cp, pgfast, ecg, thal, angina,thal, ncol=4)
class <- cat.plot(data=cardio_data,X=class,
xlabel="Disease conditition",
title="Healthy or Sick Individuals")
#Sex
sex <- cat.plot(data=cardio_data,X=sex,
xlabel="Gender",
title="Gender (Male or Female)")
#chest_pain_type:
cp <- cat.plot(data=cardio_data,X=chest_pain_type,
xlabel="Chest Pain Type",
title="Chest Pain Type")
#PG_fasting
pgfast <- cat.plot(data=cardio_data,X=PG_fasting,
xlabel="PG Fasting",
title="Plasma Glucose Fasting")
#ECG_rest
ecg <- cat.plot(data=cardio_data,X=ECG_rest,
xlabel="ECG rest",
title="Electrocardiogram on rest")
#Thal
thal <- cat.plot(data=cardio_data,X=thal,
xlabel="Thalach",
title="Maximum heart rate achieved (thalach)")
#Angina
angina <- cat.plot(data=cardio_data,X=angina,
xlabel="Angina",
title="Angina chest pain")
#slope
slope <- cat.plot(data=cardio_data,X=slope,
xlabel="Slope",
title="Slope of ST Segment")
### Spreadsheet of histograms for categorical data
cat.barplot <-grid.arrange(class, sex, cp, pgfast, ecg, thal, angina, slope, ncol=4)
age <- cont.plot(cardio_data,X=age,xlabel="Age",title="Age Distribution")
#BP
BP <- cont.plot(cardio_data,X=BP,xlabel="Blood Pressure (mmHg)",title="Blood Pressure")
#Cholesterol
chol <- cont.plot(cardio_data,X=cholesterol,xlabel="Cholesterol level (mg/dL)",title="Cholesterol")
#Max HR
HR <- cont.plot(cardio_data,X=maxHR,xlabel="Maximum Heart Rate (bpm)",title="Maximum Heart Rate")
#Peak
peak <- cont.plot(cardio_data,X=peak,xlabel="Peak",title="Peak")
### Spreadsheet of histograms for continuous data
cont.histogram <- grid.arrange(age,BP,chol,HR,peak, ncol=3)
### Spreadsheet of histograms for categorical data
cat.barplot <-grid.arrange(class, sex, cp, pgfast, ecg, thal, angina, slope, ncol=4)
?grid.arrange
### Spreadsheet of histograms for categorical data
cat.barplot <- grid.arrange(class, sex, cp, pgfast, ecg, thal, angina, slope, ncol=3, nrow=3)
